openapi: 3.0.1
info:
  title: Dictionaries API
  description: >-
    <p>API to access the buildingSMART Data Dictionary.</p><p>For manually
    uploading import files, please go to <a
    href="https://manage.bsdd.buildingsmart.org">bSDD Management portal</a>.
    Version history can be found at <a
    href="https://github.com/buildingSMART/bSDD/blob/master/API%20version%20history.md">Version
    history</a>.</p><p>Keep an eye on (planned) updates: <a
    href="https://forums.buildingsmart.org/t/bsdd-tech-updates/4889">bSDD tech
    updates</a></p><h3>For client developers</h3><p>If you're creating a desktop
    client that only calls the not secured APIs, you're ready to go.<br/>If you
    don't use the secured APIs but want to call the other APIs from your website
    or SPA, then we need the URL of your website to allow CORS.</p><p>If you are
    going to build a client that is going to use secured APIs, you must request
    a Client ID. You can do so by sending us an email and give:</p><ul><li>the
    name of the client application</li><li>type of application:<ul><li>Web
    application</li><li>Single-page application</li><li>iOS / macOS, Object-C,
    Swift, Xamarin</li><li>Adroid - Java, Kotlin,
    Xamarin</li><li>Mobile/desktop</li></ul> <li>which development language are
    you using? (sometimes the redirectUri to be configured depends on the used
    library)</li><li>if it is a website or SPA, specify the return url (the
    login page will redirect to this url after user has logged in)</li></ul>
  contact:
    name: Support
    url: https://github.com/buildingSMART/bSDD
    email: bsdd_support@buildingsmart.org
  license:
    name: MIT license
    url: >-
      https://bsddprototype2020.blob.core.windows.net/public/Copyright_2020_buildingSMART_International.txt
  version: v1
servers:
  - url: https://api.bsdd.buildingsmart.org/
paths:
  /api/Class/v1:
    get:
      tags:
        - Class
      summary: Get class details
      operationId: ClassGet
      parameters:
        - name: Uri
          in: query
          description: >-
            URI of the class, e.g.
            https://identifier.buildingsmart.org/uri/bs-agri/fruitvegs/1.1/class/apple
          required: true
          schema:
            type: string
        - name: IncludeClassProperties
          in: query
          description: >-
            Use this option to include properties of the class. By default, it
            is set to false
          schema:
            type: boolean
        - name: IncludeChildClassReferences
          in: query
          description: >-
            Use this option to include references to child classes. By default,
            it is set to false
          schema:
            type: boolean
        - name: IncludeClassRelations
          in: query
          description: >-
            Use this option to include loading relations of the class. By
            default, it is set to false
          schema:
            type: boolean
        - name: IncludeReverseRelations
          in: query
          description: >-
            Use this option to include loading reverse relations of the class,
            i.e. classes having a relation with this class. By default, it is
            set to false
          schema:
            type: boolean
        - name: ReverseRelationDictionaryUris
          in: query
          description: >-
            When including reverse relations, you can specify which dictionaries
            to include. By default, all dictionaries are included
          schema:
            type: array
            items:
              type: string
        - name: languageCode
          in: query
          description: >-
            Specify language (case sensitive). For those items the text is not
            available in the requested language, the text will be returned in
            the default language of the dictionary
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ClassContract.v1'
            application/json:
              schema:
                $ref: '#/components/schemas/ClassContract.v1'
            text/json:
              schema:
                $ref: '#/components/schemas/ClassContract.v1'
            application/xml:
              schema:
                $ref: '#/components/schemas/ClassContract.v1'
            text/xml:
              schema:
                $ref: '#/components/schemas/ClassContract.v1'
            text/html:
              schema:
                $ref: '#/components/schemas/ClassContract.v1'
            text/turtle:
              schema:
                $ref: '#/components/schemas/ClassContract.v1'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/ClassContract.v1'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/ClassContract.v1'
  /api/Class/Relations/v1:
    get:
      tags:
        - Class
      summary: Get class relations or reverse relations (paginated)
      operationId: ClassRelationsGet
      parameters:
        - name: ClassUri
          in: query
          description: >-
            URI of the class, e.g.
            https://identifier.buildingsmart.org/uri/bs-agri/fruitvegs/1.1/class/apple
          required: true
          schema:
            type: string
        - name: GetReverseRelations
          in: query
          description: Get either the forward or the reverse relations
          required: true
          schema:
            type: boolean
        - name: SearchText
          in: query
          description: "Optional: Search text to filter the relations.\r\nSearch is done in the class name only."
          schema:
            type: string
        - name: Offset
          in: query
          description: Zero-based offset of the first item to be returned. Default is 0.
          schema:
            type: integer
            format: int32
        - name: Limit
          in: query
          description: >-
            Limit number of items to be returned. The default and maximum number
            of items returned is 1000. When Offset is specified, then the
            default limit is 100.
          schema:
            type: integer
            format: int32
        - name: languageCode
          in: query
          description: >-
            Specify language (case sensitive). For those items the text is not
            available in the requested language, the text will be returned in
            the default language of the dictionary
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ClassRelationsContract.v1'
            application/json:
              schema:
                $ref: '#/components/schemas/ClassRelationsContract.v1'
            text/json:
              schema:
                $ref: '#/components/schemas/ClassRelationsContract.v1'
            application/xml:
              schema:
                $ref: '#/components/schemas/ClassRelationsContract.v1'
            text/xml:
              schema:
                $ref: '#/components/schemas/ClassRelationsContract.v1'
            text/html:
              schema:
                $ref: '#/components/schemas/ClassRelationsContract.v1'
            text/turtle:
              schema:
                $ref: '#/components/schemas/ClassRelationsContract.v1'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/ClassRelationsContract.v1'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/ClassRelationsContract.v1'
  /api/Class/Properties/v1:
    get:
      tags:
        - Class
      summary: Get class properties (paginated)
      operationId: ClassPropertiesGet
      parameters:
        - name: ClassUri
          in: query
          description: >-
            URI of the class, e.g.
            https://identifier.buildingsmart.org/uri/bs-agri/fruitvegs/1.1/class/apple
          required: true
          schema:
            type: string
        - name: PropertySet
          in: query
          description: 'Optional: Property set to filter the properties'
          schema:
            type: string
        - name: PropertyCode
          in: query
          description: 'Optional: Property code to filter the properties'
          schema:
            type: string
        - name: SearchText
          in: query
          description: "Optional: Search text to filter the properties.\r\nSearch is done in the property name, property description and property code.\r\nCannot be used together with PropertySet or PropertyCode."
          schema:
            type: string
        - name: Offset
          in: query
          description: Zero-based offset of the first item to be returned. Default is 0.
          schema:
            type: integer
            format: int32
        - name: Limit
          in: query
          description: >-
            Limit number of items to be returned. The default and maximum number
            of items returned is 1000. When Offset is specified, then the
            default limit is 100.
          schema:
            type: integer
            format: int32
        - name: languageCode
          in: query
          description: >-
            Specify language (case sensitive). For those items the text is not
            available in the requested language, the text will be returned in
            the default language of the dictionary
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ClassPropertiesContract.v1'
            application/json:
              schema:
                $ref: '#/components/schemas/ClassPropertiesContract.v1'
            text/json:
              schema:
                $ref: '#/components/schemas/ClassPropertiesContract.v1'
            application/xml:
              schema:
                $ref: '#/components/schemas/ClassPropertiesContract.v1'
            text/xml:
              schema:
                $ref: '#/components/schemas/ClassPropertiesContract.v1'
            text/html:
              schema:
                $ref: '#/components/schemas/ClassPropertiesContract.v1'
            text/turtle:
              schema:
                $ref: '#/components/schemas/ClassPropertiesContract.v1'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/ClassPropertiesContract.v1'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/ClassPropertiesContract.v1'
  /api/Dictionary/v1:
    get:
      tags:
        - Dictionary
      summary: Get list of available Dictionaries with optional filtering.
      operationId: DictionaryGet
      parameters:
        - name: Uri
          in: query
          description: "Optional parameter to filter by first part of URI. Use this one to get details of just one dictionary version\r\nor, if you leave out the version number at the end, get all the versions of a dictionary.\r\nExample: https://identifier.buildingsmart.org/uri/bs-agri/fruitvegs/"
          schema:
            type: string
        - name: IncludeTestDictionaries
          in: query
          description: "Should test dictionaries be included in the result? By default it is set to false.\r\nThis option is ignored if you specify a URI."
          schema:
            type: boolean
        - name: Offset
          in: query
          description: Zero-based offset of the first item to be returned. Default is 0.
          schema:
            type: integer
            format: int32
        - name: Limit
          in: query
          description: >-
            Limit number of items to be returned. The default and maximum number
            of items returned is 1000. When Offset is specified, then the
            default limit is 100.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DictionaryResponseContract.v1'
            application/json:
              schema:
                $ref: '#/components/schemas/DictionaryResponseContract.v1'
            text/json:
              schema:
                $ref: '#/components/schemas/DictionaryResponseContract.v1'
            application/xml:
              schema:
                $ref: '#/components/schemas/DictionaryResponseContract.v1'
            text/xml:
              schema:
                $ref: '#/components/schemas/DictionaryResponseContract.v1'
            text/html:
              schema:
                $ref: '#/components/schemas/DictionaryResponseContract.v1'
            text/turtle:
              schema:
                $ref: '#/components/schemas/DictionaryResponseContract.v1'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/DictionaryResponseContract.v1'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/DictionaryResponseContract.v1'
  /api/Dictionary/v1/Properties:
    get:
      tags:
        - Dictionary
      summary: Get Dictionary with its properties
      operationId: DictionaryGetWithProperties
      parameters:
        - name: Uri
          in: query
          description: >-
            The URI of the dictionary. The option "latest" is supported, e.g.
            https://identifier.buildingsmart.org/uri/bs-agri/fruitvegs/latest
          required: true
          schema:
            type: string
        - name: SearchText
          in: query
          description: Optional filter text.
          schema:
            type: string
        - name: Offset
          in: query
          description: Zero-based offset of the first item to be returned. Default is 0.
          schema:
            type: integer
            format: int32
        - name: Limit
          in: query
          description: >-
            Limit number of items to be returned. The default and maximum number
            of items returned is 1000. When Offset is specified, then the
            default limit is 100.
          schema:
            type: integer
            format: int32
        - name: languageCode
          in: query
          description: >-
            Specify language (case sensitive). For those items the text is not
            available in the requested language, the text will be returned in
            the default language of the dictionary
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DictionaryPropertiesResponseContract.v1'
            application/json:
              schema:
                $ref: '#/components/schemas/DictionaryPropertiesResponseContract.v1'
            text/json:
              schema:
                $ref: '#/components/schemas/DictionaryPropertiesResponseContract.v1'
            application/xml:
              schema:
                $ref: '#/components/schemas/DictionaryPropertiesResponseContract.v1'
            text/xml:
              schema:
                $ref: '#/components/schemas/DictionaryPropertiesResponseContract.v1'
            text/html:
              schema:
                $ref: '#/components/schemas/DictionaryPropertiesResponseContract.v1'
            text/turtle:
              schema:
                $ref: '#/components/schemas/DictionaryPropertiesResponseContract.v1'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/DictionaryPropertiesResponseContract.v1'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/DictionaryPropertiesResponseContract.v1'
  /api/Dictionary/v1/Classes:
    get:
      tags:
        - Dictionary
      summary: Get Dictionary with (tree of) classes
      operationId: DictionaryClassesGetWithClasses
      parameters:
        - name: Uri
          in: query
          description: >-
            The URI of the dictionary. The option "latest" is supported, e.g.
            https://identifier.buildingsmart.org/uri/bs-agri/fruitvegs/latest
          required: true
          schema:
            type: string
        - name: UseNestedClasses
          in: query
          description: "Set to true to get classes in a nested structure.\r\nYou can't use this option if you are using pagination."
          schema:
            type: boolean
        - name: ClassType
          in: query
          description: >-
            Optional filter on class type. Possible values are "Class",
            "GroupOfProperties", "AlternativeUse" and "Material".
          schema:
            type: string
        - name: SearchText
          in: query
          description: "Optional filter text.\r\nIgnored when UseNestedClasses = true"
          schema:
            type: string
        - name: RelatedIfcEntity
          in: query
          description: "Optional filter on related IFC entity. It accepts an IFC entity code (e.g. IfcWall) or uri (e.g. https://identifier.buildingsmart.org/uri/buildingsmart/ifc/4.3/class/IfcWall).\r\nWhen a code is supplied, finding matching classes ignores the IFC version.\r\nIgnored when UseNestedClasses = true"
          schema:
            type: string
            deprecated: true
        - name: RelatedIfcEntities
          in: query
          description: "Optional filter on related IFC entities. It accepts an IFC entity code (e.g. IfcWall) or uri (e.g. https://identifier.buildingsmart.org/uri/buildingsmart/ifc/4.3/class/IfcWall).\r\nWhen a code is supplied, finding matching classes ignores the IFC version.\r\nIgnored when UseNestedClasses = true"
          schema:
            type: array
            items:
              type: string
        - name: Offset
          in: query
          description: Zero-based offset of the first item to be returned. Default is 0.
          schema:
            type: integer
            format: int32
        - name: Limit
          in: query
          description: >-
            Limit number of items to be returned. The default and maximum number
            of items returned is 1000. When Offset is specified, then the
            default limit is 100.
          schema:
            type: integer
            format: int32
        - name: languageCode
          in: query
          description: >-
            Specify language (case sensitive). For those items the text is not
            available in the requested language, the text will be returned in
            the default language of the dictionary
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/DictionaryClassesResponseContract.v1.Classes
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DictionaryClassesResponseContract.v1.Classes
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/DictionaryClassesResponseContract.v1.Classes
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/DictionaryClassesResponseContract.v1.Classes
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/DictionaryClassesResponseContract.v1.Classes
            text/html:
              schema:
                $ref: >-
                  #/components/schemas/DictionaryClassesResponseContract.v1.Classes
            text/turtle:
              schema:
                $ref: >-
                  #/components/schemas/DictionaryClassesResponseContract.v1.Classes
            application/x-turtle:
              schema:
                $ref: >-
                  #/components/schemas/DictionaryClassesResponseContract.v1.Classes
            application/rdf+xml:
              schema:
                $ref: >-
                  #/components/schemas/DictionaryClassesResponseContract.v1.Classes
  /api/DictionaryDownload/sketchup/v1:
    post:
      tags:
        - Dictionary
      summary: "Download a file with an export of a dictionary in format supported by Sketchup.\r\nThis API replaces /api/RequestExportFile/preview"
      operationId: DictionaryDownloadSketchup
      parameters:
        - name: DictionaryUri
          in: query
          description: >-
            The uri of the dictionary to be downloaded, including version
            number, e.g.
            https://identifier.buildingsmart.org/uri/bs-agri/fruitvegs/1.1. You
            can replace the version number by "latest" to automatically get the
            latest (active) version of the dictionary
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                format: binary
            application/json:
              schema:
                type: string
                format: binary
            text/json:
              schema:
                type: string
                format: binary
            text/html:
              schema:
                type: string
                format: binary
            text/turtle:
              schema:
                type: string
                format: binary
            application/x-turtle:
              schema:
                type: string
                format: binary
            application/rdf+xml:
              schema:
                type: string
                format: binary
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/html:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/turtle:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/html:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/turtle:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/html:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/turtle:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Server Error
      security:
        - aad-jwt:
            - /read
  /api/UploadImportFile/v2:
    post:
      tags:
        - Dictionary Update
      summary: "Upload a bSDD import model json file, see https://github.com/buildingSMART/bSDD/tree/master/Model/Import%20Model for more information.\r\nValidation will be done asynchronously for large files (>= 15 MB). Validation results will be sent by e-mail."
      operationId: UploadImportFilePost
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - FormFile
                - OrganizationCode
              type: object
              properties:
                OrganizationCode:
                  type: string
                  description: "Code of the organization owning the dictionary.\r\nIf you do not know the code, contact us (see e-mail address on top of this page)"
                FormFile:
                  type: string
                  description: The bsdd import file in json format
                  format: binary
                ValidateOnly:
                  type: boolean
                  description: "Set to true if you only want to validate the file. Even when there are no validation errors the file wil not be imported.\r\nThe validation result will not be send via e-mail."
                IsTest:
                  type: boolean
                  description: "Set to true if you are just testing your file. Data will be stored in the database, you can retrieve it via the API, but you can't set status to Active.\r\nDictionary will be deleted after 60 days of last upload."
            encoding:
              OrganizationCode:
                style: form
              FormFile:
                style: form
              ValidateOnly:
                style: form
              IsTest:
                style: form
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UploadImportFileResult.v2'
            application/json:
              schema:
                $ref: '#/components/schemas/UploadImportFileResult.v2'
            text/json:
              schema:
                $ref: '#/components/schemas/UploadImportFileResult.v2'
            application/xml:
              schema:
                $ref: '#/components/schemas/UploadImportFileResult.v2'
            text/xml:
              schema:
                $ref: '#/components/schemas/UploadImportFileResult.v2'
            text/html:
              schema:
                $ref: '#/components/schemas/UploadImportFileResult.v2'
            text/turtle:
              schema:
                $ref: '#/components/schemas/UploadImportFileResult.v2'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/UploadImportFileResult.v2'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/UploadImportFileResult.v2'
      security:
        - aad-jwt:
            - /read
  /api/UploadImportFile/v1:
    post:
      tags:
        - Dictionary Update
      summary: >-
        Upload a bSDD import model json file, see
        https://github.com/buildingSMART/bSDD/tree/master/Model/Import%20Model
        for more information
      operationId: UploadImportFileV1Post
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - FormFile
                - OrganizationCode
              type: object
              properties:
                OrganizationCode:
                  type: string
                  description: "Code of the organization owning the dictionary.\r\nIf you do not know the code, contact us (see e-mail address on top of this page)"
                FormFile:
                  type: string
                  description: The bsdd import file in json format
                  format: binary
                ValidateOnly:
                  type: boolean
                  description: "Set to true if you only want to validate the file. Even when there are no validation errors the file wil not be imported.\r\nThe validation result will not be send via e-mail."
                IsTest:
                  type: boolean
                  description: "Set to true if you are just testing your file. Data will be stored in the database, you can retrieve it via the API, but you can't set status to Active.\r\nDictionary will be deleted after 60 days of last upload."
            encoding:
              OrganizationCode:
                style: form
              FormFile:
                style: form
              ValidateOnly:
                style: form
              IsTest:
                style: form
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UploadImportFileResult.v1'
            application/json:
              schema:
                $ref: '#/components/schemas/UploadImportFileResult.v1'
            text/json:
              schema:
                $ref: '#/components/schemas/UploadImportFileResult.v1'
            application/xml:
              schema:
                $ref: '#/components/schemas/UploadImportFileResult.v1'
            text/xml:
              schema:
                $ref: '#/components/schemas/UploadImportFileResult.v1'
            text/html:
              schema:
                $ref: '#/components/schemas/UploadImportFileResult.v1'
            text/turtle:
              schema:
                $ref: '#/components/schemas/UploadImportFileResult.v1'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/UploadImportFileResult.v1'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/UploadImportFileResult.v1'
      security:
        - aad-jwt:
            - /read
  /api/Dictionary/v1/{organizationCode}/{code}/{version}:
    put:
      tags:
        - Dictionary Update
      summary: Update the status of a Dictionary
      operationId: DictionaryUpdateStatus
      parameters:
        - name: organizationCode
          in: path
          required: true
          schema:
            type: string
        - name: code
          in: path
          required: true
          schema:
            type: string
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: >-
          The new status of the dictionary. Only transitions allowed are:
          Preview --> Active, Active --> Inactive and Inactive --> Active
        content:
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        '200':
          description: Success
      security:
        - aad-jwt:
            - /manage
    delete:
      tags:
        - Dictionary Update
      summary: Delete a dictionary version
      operationId: DictionaryUpdateDeleteVersion
      parameters:
        - name: organizationCode
          in: path
          required: true
          schema:
            type: string
        - name: code
          in: path
          required: true
          schema:
            type: string
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
      security:
        - aad-jwt:
            - /manage
  /api/Dictionary/v1/{organizationCode}/{code}:
    delete:
      tags:
        - Dictionary Update
      summary: Delete all versions of a dictionary
      operationId: DictionaryUpdateDelete
      parameters:
        - name: organizationCode
          in: path
          required: true
          schema:
            type: string
        - name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
      security:
        - aad-jwt:
            - /manage
  /api/Dictionary/Popular/v1:
    get:
      tags:
        - PopularDictionary
      summary: Get list of popular Dictionaries
      operationId: PopularDictionaryGet
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PopularDictionariesResponseContract.v1'
            application/json:
              schema:
                $ref: '#/components/schemas/PopularDictionariesResponseContract.v1'
            text/json:
              schema:
                $ref: '#/components/schemas/PopularDictionariesResponseContract.v1'
            application/xml:
              schema:
                $ref: '#/components/schemas/PopularDictionariesResponseContract.v1'
            text/xml:
              schema:
                $ref: '#/components/schemas/PopularDictionariesResponseContract.v1'
            text/html:
              schema:
                $ref: '#/components/schemas/PopularDictionariesResponseContract.v1'
            text/turtle:
              schema:
                $ref: '#/components/schemas/PopularDictionariesResponseContract.v1'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/PopularDictionariesResponseContract.v1'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/PopularDictionariesResponseContract.v1'
  /api/Organization/v1/{organizationCode}/{dictionaryCode}/PrivateAccess:
    post:
      tags:
        - Private dictionary specific APIs
      summary: Add access for e-mail domain or user
      operationId: OrganizationManagePrivateAccessAdd
      parameters:
        - name: organizationCode
          in: path
          required: true
          schema:
            type: string
        - name: dictionaryCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateDictionaryAccessContract.v1'
          text/json:
            schema:
              $ref: '#/components/schemas/PrivateDictionaryAccessContract.v1'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PrivateDictionaryAccessContract.v1'
        required: true
      responses:
        '200':
          description: Success
      security:
        - aad-jwt:
            - /read
    delete:
      tags:
        - Private dictionary specific APIs
      summary: Delete access for e-mail domain or user
      operationId: OrganizationManagePrivateAccessDelete
      parameters:
        - name: organizationCode
          in: path
          required: true
          schema:
            type: string
        - name: dictionaryCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateDictionaryAccessContract.v1'
          text/json:
            schema:
              $ref: '#/components/schemas/PrivateDictionaryAccessContract.v1'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PrivateDictionaryAccessContract.v1'
        required: true
      responses:
        '200':
          description: Success
      security:
        - aad-jwt:
            - /read
  /api/Property/v5:
    get:
      tags:
        - Property
      summary: "Get Property details.\r\nIf you also need the list of classes using the property, then use api/Property/Classes"
      operationId: PropertyGet
      parameters:
        - name: uri
          in: query
          description: >-
            URI of the property, e.g.
            https://identifier.buildingsmart.org/uri/bs-agri/fruitvegs/1.1/prop/color
          required: true
          schema:
            type: string
        - name: languageCode
          in: query
          description: >-
            Specify language (case sensitive). For those items the text is not
            available in the requested language, the text will be returned in
            the default language of the dictionary
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PropertyContract.v5'
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyContract.v5'
            text/json:
              schema:
                $ref: '#/components/schemas/PropertyContract.v5'
            application/xml:
              schema:
                $ref: '#/components/schemas/PropertyContract.v5'
            text/xml:
              schema:
                $ref: '#/components/schemas/PropertyContract.v5'
            text/html:
              schema:
                $ref: '#/components/schemas/PropertyContract.v5'
            text/turtle:
              schema:
                $ref: '#/components/schemas/PropertyContract.v5'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/PropertyContract.v5'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/PropertyContract.v5'
  /api/Property/Relations/v1:
    get:
      tags:
        - Property
      summary: Get property relations or reverse relations (paginated)
      operationId: PropertyRelationsGet
      parameters:
        - name: PropertyUri
          in: query
          description: >-
            URI of the property, e.g.
            https://identifier.buildingsmart.org/uri/bs-agri/fruitvegs/1.1/prop/height
          required: true
          schema:
            type: string
        - name: GetReverseRelations
          in: query
          description: Get either the forward or the reverse relations
          required: true
          schema:
            type: boolean
        - name: Offset
          in: query
          description: Zero-based offset of the first item to be returned. Default is 0.
          schema:
            type: integer
            format: int32
        - name: Limit
          in: query
          description: >-
            Limit number of items to be returned. The default and maximum number
            of items returned is 1000. When Offset is specified, then the
            default limit is 100.
          schema:
            type: integer
            format: int32
        - name: languageCode
          in: query
          description: >-
            Specify language (case sensitive). For those items the text is not
            available in the requested language, the text will be returned in
            the default language of the dictionary
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PropertyRelationsContract.v1'
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyRelationsContract.v1'
            text/json:
              schema:
                $ref: '#/components/schemas/PropertyRelationsContract.v1'
            application/xml:
              schema:
                $ref: '#/components/schemas/PropertyRelationsContract.v1'
            text/xml:
              schema:
                $ref: '#/components/schemas/PropertyRelationsContract.v1'
            text/html:
              schema:
                $ref: '#/components/schemas/PropertyRelationsContract.v1'
            text/turtle:
              schema:
                $ref: '#/components/schemas/PropertyRelationsContract.v1'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/PropertyRelationsContract.v1'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/PropertyRelationsContract.v1'
  /api/Property/Classes/v1:
    get:
      tags:
        - Property
      summary: Get list of classes that uses the property (paginated)
      operationId: PropertyClassesGet
      parameters:
        - name: PropertyUri
          in: query
          description: >-
            URI of the property, e.g.
            https://identifier.buildingsmart.org/uri/bs-agri/fruitvegs/1.1/prop/height
          required: true
          schema:
            type: string
        - name: InternalExternal
          in: query
          description: >-
            Option to get only classes of same dictionary as the property
            (internal, default), only classes of other dictionaries (external)
            or all classes (all)
          schema:
            $ref: '#/components/schemas/InternalExternalOption.v1'
        - name: SearchText
          in: query
          description: Search text to filter classes
          schema:
            type: string
        - name: Offset
          in: query
          description: Zero-based offset of the first item to be returned. Default is 0.
          schema:
            type: integer
            format: int32
        - name: Limit
          in: query
          description: >-
            Limit number of items to be returned. The default and maximum number
            of items returned is 1000. When Offset is specified, then the
            default limit is 100.
          schema:
            type: integer
            format: int32
        - name: languageCode
          in: query
          description: >-
            Specify language (case sensitive). For those items the text is not
            available in the requested language, the text will be returned in
            the default language of the dictionary
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PropertyClassesContract.v1'
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyClassesContract.v1'
            text/json:
              schema:
                $ref: '#/components/schemas/PropertyClassesContract.v1'
            application/xml:
              schema:
                $ref: '#/components/schemas/PropertyClassesContract.v1'
            text/xml:
              schema:
                $ref: '#/components/schemas/PropertyClassesContract.v1'
            text/html:
              schema:
                $ref: '#/components/schemas/PropertyClassesContract.v1'
            text/turtle:
              schema:
                $ref: '#/components/schemas/PropertyClassesContract.v1'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/PropertyClassesContract.v1'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/PropertyClassesContract.v1'
  /api/PropertyValue/v2:
    get:
      tags:
        - Property
      summary: Get Property Value details
      operationId: PropertyValueGet
      parameters:
        - name: uri
          in: query
          description: >-
            URI of the property value, e.g.
            https://identifier.buildingsmart.org/uri/bs-agri/fruitvegs/1.1/prop/color/value/red
          required: true
          schema:
            type: string
        - name: languageCode
          in: query
          description: Language Code
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PropertyValueContract.v4'
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyValueContract.v4'
            text/json:
              schema:
                $ref: '#/components/schemas/PropertyValueContract.v4'
            application/xml:
              schema:
                $ref: '#/components/schemas/PropertyValueContract.v4'
            text/xml:
              schema:
                $ref: '#/components/schemas/PropertyValueContract.v4'
            text/html:
              schema:
                $ref: '#/components/schemas/PropertyValueContract.v4'
            text/turtle:
              schema:
                $ref: '#/components/schemas/PropertyValueContract.v4'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/PropertyValueContract.v4'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/PropertyValueContract.v4'
  /api/TextSearch/v2:
    get:
      tags:
        - Search
      summary: "Search bSDD using free text, get list of Classes and/or Properties.\r\nPagination options for Classes and Properties are combined. If result contains 10 classes and 5 properties, TotalCount will be 15. Classes will be listed first. Use Offset=10 and Limit=5, to get the 5 properties only."
      description: The details can be requested per Class via the Class API
      operationId: TextSearchGet
      parameters:
        - name: SearchText
          in: query
          description: >-
            The text to search for, minimum 2 characters (case and accent
            insensitive)
          required: true
          schema:
            type: string
        - name: TypeFilter
          in: query
          description: >-
            Type filter: can be "Class", "Property", "Material",
            "GroupOfProperties" of a semicolon separated list of these. Empty
            means all
          schema:
            type: string
        - name: DictionaryUris
          in: query
          description: List of dictionaries to filter on
          schema:
            type: array
            items:
              type: string
        - name: OnlyLatestVersion
          in: query
          schema:
            type: boolean
        - name: OnlyVerified
          in: query
          schema:
            type: boolean
        - name: IncludeInactive
          in: query
          schema:
            type: boolean
        - name: IncludePreview
          in: query
          schema:
            type: boolean
        - name: IncludeSearchDescriptions
          in: query
          schema:
            type: boolean
        - name: Offset
          in: query
          description: Zero-based offset of the first item to be returned. Default is 0.
          schema:
            type: integer
            format: int32
        - name: Limit
          in: query
          description: >-
            Limit number of items to be returned. The default and maximum number
            of items returned is 1000. When Offset is specified, then the
            default limit is 100.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TextSearchResponseContract.v2'
            application/json:
              schema:
                $ref: '#/components/schemas/TextSearchResponseContract.v2'
            text/json:
              schema:
                $ref: '#/components/schemas/TextSearchResponseContract.v2'
            application/xml:
              schema:
                $ref: '#/components/schemas/TextSearchResponseContract.v2'
            text/xml:
              schema:
                $ref: '#/components/schemas/TextSearchResponseContract.v2'
            text/html:
              schema:
                $ref: '#/components/schemas/TextSearchResponseContract.v2'
            text/turtle:
              schema:
                $ref: '#/components/schemas/TextSearchResponseContract.v2'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/TextSearchResponseContract.v2'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/TextSearchResponseContract.v2'
  /api/SearchInDictionary/v1:
    get:
      tags:
        - Search
      summary: "Search the bSDD database, get list of Classes without details.\r\nThis version uses new naming and returns one Dictionary instead of a list with always one Dictionary.\r\nThis API replaces /api/SearchList."
      description: The details can be requested per Class via the Class API
      operationId: SearchInDictionaryGet
      parameters:
        - name: DictionaryUri
          in: query
          description: >-
            The uri of the Dictionary to filter on (required). The "latest"
            option is supported, e.g.
            https://identifier.buildingsmart.org/uri/bs-agri/fruitvegs/latest
          required: true
          schema:
            type: string
        - name: SearchText
          in: query
          description: The text to search for (case and accent insensitive)
          schema:
            type: string
        - name: LanguageCode
          in: query
          description: "The ISO language code to search in and to return the text in (case sensitive)\r\nIf no language code specified or the text is not available in the requested language, the text will be returned in the default language of the dictionary.\r\nIf a language code has been given, the search takes place in texts of that language, otherwise searches will be done in the default language of the dictionary.\r\nIf an invalid or not supported language code is given, a Bad Request will be returned."
          schema:
            type: string
        - name: RelatedIfcEntity
          in: query
          description: The official IFC entity name to filter on (case sensitive)
          schema:
            type: string
        - name: Offset
          in: query
          description: Zero-based offset of the first item to be returned. Default is 0.
          schema:
            type: integer
            format: int32
        - name: Limit
          in: query
          description: >-
            Limit number of items to be returned. The default and maximum number
            of items returned is 1000. When Offset is specified, then the
            default limit is 100.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchInDictionaryResponseContract.v1'
            application/json:
              schema:
                $ref: '#/components/schemas/SearchInDictionaryResponseContract.v1'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchInDictionaryResponseContract.v1'
            application/xml:
              schema:
                $ref: '#/components/schemas/SearchInDictionaryResponseContract.v1'
            text/xml:
              schema:
                $ref: '#/components/schemas/SearchInDictionaryResponseContract.v1'
            text/html:
              schema:
                $ref: '#/components/schemas/SearchInDictionaryResponseContract.v1'
            text/turtle:
              schema:
                $ref: '#/components/schemas/SearchInDictionaryResponseContract.v1'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/SearchInDictionaryResponseContract.v1'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/SearchInDictionaryResponseContract.v1'
  /api/Class/Search/v1:
    get:
      tags:
        - Search
      summary: >-
        Search bSDD using free text. Get list of Classes matching the text and
        optional additional filters.
      operationId: ClassSearchGet
      parameters:
        - name: SearchText
          in: query
          description: The text to search for (case and accent insensitive)
          required: true
          schema:
            type: string
        - name: DictionaryUris
          in: query
          description: "List of dictionaries to filter on.\r\nFor a class to be found it must be part of one of the given dictionaries"
          schema:
            type: array
            items:
              type: string
        - name: RelatedIfcEntities
          in: query
          description: "List of related IFC entities to filter on.\r\nFor a class to be found it must have at least one of the given Related Ifc Entities"
          schema:
            type: array
            items:
              type: string
        - name: Offset
          in: query
          description: Zero-based offset of the first item to be returned. Default is 0.
          schema:
            type: integer
            format: int32
        - name: Limit
          in: query
          description: >-
            Limit number of items to be returned. The default and maximum number
            of items returned is 1000. When Offset is specified, then the
            default limit is 100.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ClassSearchResponseContract.v1'
            application/json:
              schema:
                $ref: '#/components/schemas/ClassSearchResponseContract.v1'
            text/json:
              schema:
                $ref: '#/components/schemas/ClassSearchResponseContract.v1'
            application/xml:
              schema:
                $ref: '#/components/schemas/ClassSearchResponseContract.v1'
            text/xml:
              schema:
                $ref: '#/components/schemas/ClassSearchResponseContract.v1'
            text/html:
              schema:
                $ref: '#/components/schemas/ClassSearchResponseContract.v1'
            text/turtle:
              schema:
                $ref: '#/components/schemas/ClassSearchResponseContract.v1'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/ClassSearchResponseContract.v1'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/ClassSearchResponseContract.v1'
  /api/UriRedirection/v1:
    get:
      tags:
        - z Lookup data
      summary: Get list of URI redirections
      operationId: UriRedirectionGet
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UriRedirectionsContract.v1'
            application/json:
              schema:
                $ref: '#/components/schemas/UriRedirectionsContract.v1'
            text/json:
              schema:
                $ref: '#/components/schemas/UriRedirectionsContract.v1'
            application/xml:
              schema:
                $ref: '#/components/schemas/UriRedirectionsContract.v1'
            text/xml:
              schema:
                $ref: '#/components/schemas/UriRedirectionsContract.v1'
            text/html:
              schema:
                $ref: '#/components/schemas/UriRedirectionsContract.v1'
            text/turtle:
              schema:
                $ref: '#/components/schemas/UriRedirectionsContract.v1'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/UriRedirectionsContract.v1'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/UriRedirectionsContract.v1'
  /api/Unit/v1:
    get:
      tags:
        - z Lookup data
      summary: Get list of all units
      operationId: UnitGet
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnitContract.v1'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnitContract.v1'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnitContract.v1'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnitContract.v1'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnitContract.v1'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnitContract.v1'
            text/turtle:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnitContract.v1'
            application/x-turtle:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnitContract.v1'
            application/rdf+xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnitContract.v1'
  /api/ReferenceDocument/v1:
    get:
      tags:
        - z Lookup data
      summary: Get list of all ReferenceDocuments
      operationId: ReferenceDocumentGet
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReferenceDocumentContract.v1'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReferenceDocumentContract.v1'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReferenceDocumentContract.v1'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReferenceDocumentContract.v1'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReferenceDocumentContract.v1'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReferenceDocumentContract.v1'
            text/turtle:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReferenceDocumentContract.v1'
            application/x-turtle:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReferenceDocumentContract.v1'
            application/rdf+xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReferenceDocumentContract.v1'
  /api/Language/v1:
    get:
      tags:
        - z Lookup data
      summary: Get list of available Languages
      operationId: LanguageGet
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LanguageContract.v1'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LanguageContract.v1'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LanguageContract.v1'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LanguageContract.v1'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LanguageContract.v1'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LanguageContract.v1'
            text/turtle:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LanguageContract.v1'
            application/x-turtle:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LanguageContract.v1'
            application/rdf+xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LanguageContract.v1'
  /api/Country/v1:
    get:
      tags:
        - z Lookup data
      summary: Get list of all Countries
      operationId: CountryGet
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CountryContract.v1'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CountryContract.v1'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CountryContract.v1'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CountryContract.v1'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CountryContract.v1'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CountryContract.v1'
            text/turtle:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CountryContract.v1'
            application/x-turtle:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CountryContract.v1'
            application/rdf+xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CountryContract.v1'
  /api/Health:
    get:
      tags:
        - z Other
      summary: Basic check you can use to see if the bSDD API is up and running
      operationId: HealthGet
      responses:
        '200':
          description: Success
  /api/TextSearch/v1:
    get:
      tags:
        - zz Obsolete APIs
      summary: "Search bSDD using free text, get list of Classes and/or Properties.\r\nPagination options for Classes and Properties are combined. If result contains 10 classes and 5 properties, TotalCount will be 15. Classes will be listed first. Use Offset=10 and Limit=5, to get the 5 properties only."
      description: The details can be requested per Class via the Class API
      operationId: TextSearchV1Get
      parameters:
        - name: SearchText
          in: query
          description: >-
            The text to search for, minimum 2 characters (case and accent
            insensitive)
          required: true
          schema:
            type: string
        - name: TypeFilter
          in: query
          description: 'Type filter: must be "All", "Classes" or "Properties"'
          schema:
            type: string
        - name: DictionaryUris
          in: query
          description: List of dictionaries to filter on
          schema:
            type: array
            items:
              type: string
        - name: Offset
          in: query
          description: Zero-based offset of the first item to be returned. Default is 0.
          schema:
            type: integer
            format: int32
        - name: Limit
          in: query
          description: >-
            Limit number of items to be returned. The default and maximum number
            of items returned is 1000. When Offset is specified, then the
            default limit is 100.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TextSearchResponseContract.v1'
            application/json:
              schema:
                $ref: '#/components/schemas/TextSearchResponseContract.v1'
            text/json:
              schema:
                $ref: '#/components/schemas/TextSearchResponseContract.v1'
            application/xml:
              schema:
                $ref: '#/components/schemas/TextSearchResponseContract.v1'
            text/xml:
              schema:
                $ref: '#/components/schemas/TextSearchResponseContract.v1'
            text/html:
              schema:
                $ref: '#/components/schemas/TextSearchResponseContract.v1'
            text/turtle:
              schema:
                $ref: '#/components/schemas/TextSearchResponseContract.v1'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/TextSearchResponseContract.v1'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/TextSearchResponseContract.v1'
      deprecated: true
  /api/Property/v4:
    get:
      tags:
        - zz Obsolete APIs
      summary: Get Property details
      operationId: PropertyV4Get
      parameters:
        - name: uri
          in: query
          description: >-
            URI of the property, e.g.
            https://identifier.buildingsmart.org/uri/bs-agri/fruitvegs/1.1/prop/color
          required: true
          schema:
            type: string
        - name: includeClasses
          in: query
          description: "Set to true to get list of classes where property is used (only classes of the same dictionary as the property).\r\n            Maximum number of class properties returned is 2000. In the next version of the API this option probably will be removed.\r\n            Preferred way to get the classes is by using api/Property/Classes/v1"
          schema:
            type: boolean
        - name: languageCode
          in: query
          description: >-
            Specify language (case sensitive). For those items the text is not
            available in the requested language, the text will be returned in
            the default language of the dictionary
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PropertyContract.v4'
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyContract.v4'
            text/json:
              schema:
                $ref: '#/components/schemas/PropertyContract.v4'
            application/xml:
              schema:
                $ref: '#/components/schemas/PropertyContract.v4'
            text/xml:
              schema:
                $ref: '#/components/schemas/PropertyContract.v4'
            text/html:
              schema:
                $ref: '#/components/schemas/PropertyContract.v4'
            text/turtle:
              schema:
                $ref: '#/components/schemas/PropertyContract.v4'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/PropertyContract.v4'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/PropertyContract.v4'
      deprecated: true
  /api/Classification/v4:
    get:
      tags:
        - zz Obsolete APIs
      summary: Get Classification details - please use api/Class/v1 instead
      operationId: ClassificationGet
      parameters:
        - name: namespaceUri
          in: query
          description: >-
            Namespace URI of the classification, e.g.
            https://identifier.buildingsmart.org/uri/buildingsmart/ifc-4.3/class/ifcwall
          required: true
          schema:
            type: string
        - name: includeChildClassificationReferences
          in: query
          description: Use this option to include references to child classifications
          schema:
            type: boolean
        - name: languageCode
          in: query
          description: >-
            Specify language (case sensitive). For those items the text is not
            available in the requested language, the text will be returned in
            the default language of the domain
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ClassificationContract.v4'
            application/json:
              schema:
                $ref: '#/components/schemas/ClassificationContract.v4'
            text/json:
              schema:
                $ref: '#/components/schemas/ClassificationContract.v4'
            application/xml:
              schema:
                $ref: '#/components/schemas/ClassificationContract.v4'
            text/xml:
              schema:
                $ref: '#/components/schemas/ClassificationContract.v4'
            text/html:
              schema:
                $ref: '#/components/schemas/ClassificationContract.v4'
            text/turtle:
              schema:
                $ref: '#/components/schemas/ClassificationContract.v4'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/ClassificationContract.v4'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/ClassificationContract.v4'
      deprecated: true
components:
  schemas:
    ClassContract.v1:
      required:
        - activationDateUtc
        - code
        - name
        - status
        - uri
        - versionDateUtc
      type: object
      properties:
        dictionaryUri:
          type: string
          description: URI of the dictionary
          nullable: true
        activationDateUtc:
          type: string
          description: Date of activation
          format: date-time
        code:
          minLength: 1
          type: string
          description: Code used originally by the dictionary
        creatorLanguageCode:
          type: string
          description: Language code of the creator
          nullable: true
        countriesOfUse:
          type: array
          items:
            type: string
          description: List of countries where used
          nullable: true
        countryOfOrigin:
          type: string
          description: Country of origin
          nullable: true
        deActivationDateUtc:
          type: string
          description: Date of deactivation
          format: date-time
          nullable: true
        definition:
          type: string
          description: Formal definition
          nullable: true
        deprecationExplanation:
          type: string
          description: Explanation of the deprecation
          nullable: true
        description:
          type: string
          description: Description
          nullable: true
        documentReference:
          type: string
          description: Reference to a(n official) document
          nullable: true
        name:
          minLength: 1
          type: string
          description: Name
        uri:
          minLength: 1
          type: string
          description: Unique identification
        replacedObjectCodes:
          type: array
          items:
            type: string
          description: List of codes of the replaced items
          nullable: true
        replacingObjectCodes:
          type: array
          items:
            type: string
          description: List of codes of the replacing items
          nullable: true
        revisionDateUtc:
          type: string
          description: Date of the revision
          format: date-time
          nullable: true
        revisionNumber:
          type: integer
          description: Revision number
          format: int32
          nullable: true
        status:
          minLength: 1
          type: string
          description: 'Status, can be: Preview, Active or Inactive'
        subdivisionsOfUse:
          type: array
          items:
            type: string
          description: List of subdivisions (e.g. states) where used
          nullable: true
        uid:
          type: string
          description: Alternative unique global identification
          nullable: true
        versionDateUtc:
          type: string
          description: Date of the version
          format: date-time
        versionNumber:
          type: integer
          description: Version number
          format: int32
          nullable: true
        visualRepresentationUri:
          type: string
          description: URI of a visual representation
          nullable: true
        classType:
          type: string
          description: Type of Class
          nullable: true
        referenceCode:
          type: string
          description: Code that can be used for dictionary specific purposes
          nullable: true
        synonyms:
          type: array
          items:
            type: string
          description: List of synonyms for the class
          nullable: true
        relatedIfcEntityNames:
          type: array
          items:
            type: string
          description: List of related IFC entity names (version independent)
          nullable: true
        parentClassReference:
          $ref: '#/components/schemas/ClassReferenceContract.v1'
        classProperties:
          type: array
          items:
            $ref: '#/components/schemas/ClassPropertyContract.v1'
          description: List of the properties of this class
          nullable: true
        classRelations:
          type: array
          items:
            $ref: '#/components/schemas/ClassRelationContract.v1'
          description: >-
            List of relations to other classes, can be reference to classes of
            other dictionaries
          nullable: true
        childClassReferences:
          type: array
          items:
            $ref: '#/components/schemas/ClassReferenceContract.v1'
          description: List of child classes (only filled if requested)
          nullable: true
        reverseClassRelations:
          type: array
          items:
            $ref: '#/components/schemas/ClassReverseRelationContract.v1'
          description: >-
            List of relations of other classes to this class (only filled if
            requested)
          nullable: true
        hierarchy:
          type: array
          items:
            $ref: '#/components/schemas/HierarchyItemContract.v1'
          description: List of parents of this class till root
          nullable: true
      additionalProperties: false
    ClassListItemContract.v1.Classes:
      type: object
      properties:
        uri:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        classType:
          type: string
          nullable: true
        referenceCode:
          type: string
          nullable: true
        parentClassCode:
          type: string
          nullable: true
        descriptionPart:
          type: string
          description: Description of the class, max 101 characters long
          nullable: true
        children:
          type: array
          items:
            $ref: '#/components/schemas/ClassListItemContract.v1.Classes'
          nullable: true
      additionalProperties: false
    ClassPropertiesContract.v1:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        offset:
          type: integer
          format: int32
        count:
          type: integer
          format: int32
        classUri:
          type: string
          description: Uri of the class
          nullable: true
        classProperties:
          type: array
          items:
            $ref: '#/components/schemas/ClassPropertyItemContract.v1'
          description: List of the properties of this class
          nullable: true
      additionalProperties: false
    ClassPropertyContract.v1:
      required:
        - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
          description: Name of the property
        uri:
          type: string
          nullable: true
        description:
          type: string
          description: "Plain language description of the property.\r\nIf at Property level no description has been given but a \"Definition\" is available, then \"Definition\" is returned as description"
          nullable: true
        definition:
          type: string
          description: "Definition of the property.\r\nDescription is same as definition if at Property level no description has been given."
          nullable: true
        dataType:
          type: string
          description: Format for expressing the value of the property
          nullable: true
        dimension:
          type: string
          description: "Dimension of the physical quantity in format \"L M T I Θ N J\", for example \"-2 1 0 0 0 0 0\".\r\nWith\r\n  L   Length\r\n  M   Mass\r\n  T   Time\r\n  I   Electric current\r\n  Θ   Thermodynamic Temperature\r\n  N   Amount of substance\r\n  J   Luminous intensity"
          nullable: true
        dimensionLength:
          type: integer
          description: The Length value of the dimension
          format: int32
          nullable: true
        dimensionMass:
          type: integer
          description: The Mass value of the dimension
          format: int32
          nullable: true
        dimensionTime:
          type: integer
          description: The Time value of the dimension
          format: int32
          nullable: true
        dimensionElectricCurrent:
          type: integer
          description: The Electric current value of the dimension
          format: int32
          nullable: true
        dimensionThermodynamicTemperature:
          type: integer
          description: The Thermodynamic temperature value of the dimension
          format: int32
          nullable: true
        dimensionAmountOfSubstance:
          type: integer
          description: The Amount of substance value of the dimension
          format: int32
          nullable: true
        dimensionLuminousIntensity:
          type: integer
          description: The Luminous intensity value of the dimension
          format: int32
          nullable: true
        dynamicParameterPropertyCodes:
          type: array
          items:
            type: string
          description: "List of codes of the properties which are parameters of the function for a dynamic property.\r\nOnly applicable for dynamic properties (IsDynamic)"
          nullable: true
        example:
          type: string
          description: Illustrate possible use or values of the Property
          nullable: true
        isDynamic:
          type: boolean
          description: >-
            True if the value of this property is dependent on other properties
            (as provided in DynamicParameterPropertyCodes)
          nullable: true
        isRequired:
          type: boolean
          description: Indicates if this property is required for the class
          nullable: true
        isWritable:
          type: boolean
          description: Indicates if the value of the property can be changed by the user
          nullable: true
        maxExclusive:
          type: number
          description: "Maximum value of the property, exclusive\r\nThis value does not need to be the same as the MaxExclusive in the Property contract\r\nbecause this value can be overruled at Class-Property level to define a more strict value."
          format: double
          nullable: true
        maxInclusive:
          type: number
          description: "Maximum value of the property, inclusive\r\nThis value does not need to be the same as the MaxInclusive in the Property contract\r\nbecause this value can be overruled at Class-Property level to define a more strict value."
          format: double
          nullable: true
        minExclusive:
          type: number
          description: "Minimum value of the property, exclusive\r\nThis value does not need to be the same as the MinExclusive in the Property contract\r\nbecause this value can be overruled at Class-Property level to define a more strict value."
          format: double
          nullable: true
        minInclusive:
          type: number
          description: "Minimum value of the property, inclusive\r\nThis value does not need to be the same as the MinInclusive in the Property contract\r\nbecause this value can be overruled at Class-Property level to define a more strict value."
          format: double
          nullable: true
        pattern:
          type: string
          description: "An XML Schema Regular expression for the property value.\r\nSee for explanation: https://www.regular-expressions.info/xml.html.\r\nThis value does not need to be the same as the Pattern in the Property contract\r\nbecause this value can be overruled at Class-Property level to define a more strict value."
          nullable: true
        physicalQuantity:
          type: string
          description: The quantity in plain text
          nullable: true
        allowedValues:
          type: array
          items:
            $ref: '#/components/schemas/ClassPropertyValueContract.v1'
          description: "List of allowed values\r\nThis list does not need to be the same as the list of AllowedValues in the Property contract\r\nbecause this list can be overruled at Class-Property level to define a more strict list."
          nullable: true
        predefinedValue:
          type: string
          description: >-
            Predefined value: if the class can have only one value for this
            property, this is it
          nullable: true
        propertyCode:
          type: string
          description: >-
            Code of the property, only applicable if property is of the same
            dictionary as the class.
          nullable: true
        propertyDictionaryName:
          type: string
          description: Name of the Dictionary this property belongs to
          nullable: true
        propertyDictionaryUri:
          type: string
          description: Uri of the Dictionary this property belongs to
          nullable: true
        propertyUri:
          type: string
          description: Unique identification of the property
          nullable: true
        propertySet:
          type: string
          description: Name of the Property Set
          nullable: true
        propertyStatus:
          type: string
          description: 'Status of the property: Preview, Active or Inactive'
          nullable: true
        propertyValueKind:
          type: string
          description: >-
            Indicates kind of value: Single, Range (2 values expected), List
            (multiple values expected), Complex (use in combination with
            "ConnectedProperties"), ComplexList
          nullable: true
        symbol:
          type: string
          description: Symbol of the property
          nullable: true
        units:
          type: array
          items:
            type: string
          description: List of units to select from
          nullable: true
        qudtCodes:
          type: array
          items:
            type: string
          description: List of QUDT unit codes to select from
          nullable: true
      additionalProperties: false
    ClassPropertyItemContract.v1:
      required:
        - name
        - propertySet
        - uri
      type: object
      properties:
        name:
          minLength: 1
          type: string
          description: Name of the property
        uri:
          minLength: 1
          type: string
          description: Uri of the property
        description:
          type: string
          description: "Plain language description of the property.\r\nIf at Property level no description has been given but a \"Definition\" is available, then \"Definition\" is returned as description"
          nullable: true
        definition:
          type: string
          description: Definition of the property.
          nullable: true
        dataType:
          type: string
          description: Format for expressing the value of the property
          nullable: true
        dimension:
          type: string
          description: "Dimension of the physical quantity in format \"L M T I Θ N J\", for example \"-2 1 0 0 0 0 0\".\r\nWith\r\n  L   Length\r\n  M   Mass\r\n  T   Time\r\n  I   Electric current\r\n  Θ   Thermodynamic Temperature\r\n  N   Amount of substance\r\n  J   Luminous intensity"
          nullable: true
        dimensionLength:
          type: integer
          description: The Length value of the dimension
          format: int32
          nullable: true
        dimensionMass:
          type: integer
          description: The Mass value of the dimension
          format: int32
          nullable: true
        dimensionTime:
          type: integer
          description: The Time value of the dimension
          format: int32
          nullable: true
        dimensionElectricCurrent:
          type: integer
          description: The Electric current value of the dimension
          format: int32
          nullable: true
        dimensionThermodynamicTemperature:
          type: integer
          description: The Thermodynamic temperature value of the dimension
          format: int32
          nullable: true
        dimensionAmountOfSubstance:
          type: integer
          description: The Amount of substance value of the dimension
          format: int32
          nullable: true
        dimensionLuminousIntensity:
          type: integer
          description: The Luminous intensity value of the dimension
          format: int32
          nullable: true
        dynamicParameterPropertyCodes:
          type: array
          items:
            type: string
          description: "List of codes of the properties which are parameters of the function for a dynamic property.\r\nOnly applicable for dynamic properties (IsDynamic)"
          nullable: true
        example:
          type: string
          description: Illustrate possible use or values of the Property
          nullable: true
        isDynamic:
          type: boolean
          description: >-
            True if the value of this property is dependent on other properties
            (as provided in DynamicParameterPropertyCodes)
          nullable: true
        isRequired:
          type: boolean
          description: Indicates if this property is required for the class
          nullable: true
        isWritable:
          type: boolean
          description: Indicates if the value of the property can be changed by the user
          nullable: true
        maxExclusive:
          type: number
          description: "Maximum value of the property, exclusive\r\nThis value does not need to be the same as the MaxExclusive in the Property contract\r\nbecause this value can be overruled at Class-Property level to define a more strict value."
          format: double
          nullable: true
        maxInclusive:
          type: number
          description: "Maximum value of the property, inclusive\r\nThis value does not need to be the same as the MaxInclusive in the Property contract\r\nbecause this value can be overruled at Class-Property level to define a more strict value."
          format: double
          nullable: true
        minExclusive:
          type: number
          description: "Minimum value of the property, exclusive\r\nThis value does not need to be the same as the MinExclusive in the Property contract\r\nbecause this value can be overruled at Class-Property level to define a more strict value."
          format: double
          nullable: true
        minInclusive:
          type: number
          description: "Minimum value of the property, inclusive\r\nThis value does not need to be the same as the MinInclusive in the Property contract\r\nbecause this value can be overruled at Class-Property level to define a more strict value."
          format: double
          nullable: true
        pattern:
          type: string
          description: "An XML Schema Regular expression for the property value.\r\nSee for explanation: https://www.regular-expressions.info/xml.html.\r\nThis value does not need to be the same as the Pattern in the Property contract\r\nbecause this value can be overruled at Class-Property level to define a more strict value."
          nullable: true
        physicalQuantity:
          type: string
          description: The quantity in plain text
          nullable: true
        allowedValues:
          type: array
          items:
            $ref: '#/components/schemas/ClassPropertyValueItemContract.v1'
          description: "List of allowed values\r\nThis list does not need to be the same as the list of AllowedValues in the Property contract\r\nbecause this list can be overruled at Class-Property level to define a more strict list."
          nullable: true
        predefinedValue:
          type: string
          description: >-
            Predefined value: if the class can have only one value for this
            property, this is it
          nullable: true
        propertyCode:
          type: string
          description: >-
            Code of the property, only applicable if property is of the same
            dictionary as the class.
          nullable: true
        propertyDictionaryName:
          type: string
          description: Name of the Dictionary this property belongs to
          nullable: true
        propertyDictionaryUri:
          type: string
          description: Uri of the Dictionary this property belongs to
          nullable: true
        propertyUri:
          type: string
          description: Unique identification of the property
          nullable: true
        propertySet:
          minLength: 1
          type: string
          description: Name of the Property Set
        propertyStatus:
          type: string
          description: 'Status of the property: Preview, Active or Inactive'
          nullable: true
        propertyValueKind:
          type: string
          description: >-
            Indicates kind of value: Single, Range (2 values expected), List
            (multiple values expected), Complex (use in combination with
            "ConnectedProperties"), ComplexList
          nullable: true
        symbol:
          type: string
          description: Symbol of the property
          nullable: true
        units:
          type: array
          items:
            type: string
          description: List of units to select from
          nullable: true
        qudtCodes:
          type: array
          items:
            type: string
          description: List of QUDT unit codes to select from
          nullable: true
      additionalProperties: false
    ClassPropertyValueContract.v1:
      required:
        - value
      type: object
      properties:
        uri:
          type: string
          description: Globally unique identification of the value
          nullable: true
        code:
          type: string
          description: Identification of the value
          nullable: true
        value:
          minLength: 1
          type: string
          description: Allowed value of the property
        description:
          type: string
          description: Description of the value
          nullable: true
        sortNumber:
          type: integer
          description: Sort number of value within the list of values for the Property
          format: int32
          nullable: true
      additionalProperties: false
    ClassPropertyValueItemContract.v1:
      required:
        - value
      type: object
      properties:
        uri:
          type: string
          description: Globally unique identification of the value
          nullable: true
        code:
          type: string
          description: Identification of the value
          nullable: true
        value:
          minLength: 1
          type: string
          description: Allowed value of the property
        description:
          type: string
          description: Description of the value
          nullable: true
        sortNumber:
          type: integer
          description: Sort number of value within the list of values for the Property
          format: int32
          nullable: true
      additionalProperties: false
    ClassReferenceContract.v1:
      required:
        - uri
      type: object
      properties:
        uri:
          minLength: 1
          type: string
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
      additionalProperties: false
    ClassRelationContract.v1:
      required:
        - relatedClassUri
        - relationType
      type: object
      properties:
        uri:
          type: string
          nullable: true
        relationType:
          minLength: 1
          type: string
          description: >-
            Can be one of: HasReference, IsEqualTo, IsSynonymOf, IsParentOf,
            IsChildOf, HasPart
        relatedClassUri:
          minLength: 1
          type: string
          description: Namespace URI of the related class
        relatedClassName:
          type: string
          description: Name of the related class
          nullable: true
        fraction:
          type: number
          description: >-
            Optional provision of a fraction of the total amount (e.g. volume or
            weight) that applies to the class relations of one relation type
          format: double
          nullable: true
      additionalProperties: false
    ClassRelationItemContract.v1:
      required:
        - classUri
        - relationType
      type: object
      properties:
        relationType:
          minLength: 1
          type: string
          description: >-
            Can be one of: HasReference, IsEqualTo, IsSynonymOf, IsParentOf,
            IsChildOf, HasPart
        classUri:
          minLength: 1
          type: string
          description: URI of the related class
        className:
          type: string
          description: Name of the related class
          nullable: true
        fraction:
          type: number
          description: >-
            Optional provision of a fraction of the total amount (e.g. volume or
            weight) that applies to the class relations of one relation type
          format: double
          nullable: true
        dictionaryUri:
          type: string
          description: >-
            The URI of the dictionary that contains the reverse related class.
            This URI can be used to retrieve the dictionary
          nullable: true
      additionalProperties: false
    ClassRelationsContract.v1:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        offset:
          type: integer
          format: int32
        count:
          type: integer
          format: int32
        classUri:
          type: string
          description: Uri of the class
          nullable: true
        areReversedRelations:
          type: boolean
        classRelations:
          type: array
          items:
            $ref: '#/components/schemas/ClassRelationItemContract.v1'
          description: List of the relations of this class
          nullable: true
      additionalProperties: false
    ClassReverseRelationContract.v1:
      required:
        - classUri
        - relationType
      type: object
      properties:
        relationType:
          minLength: 1
          type: string
          description: >-
            Can be one of: HasReference, IsEqualTo, IsSynonymOf, IsParentOf,
            IsChildOf, HasPart
        classUri:
          minLength: 1
          type: string
          description: URI of the reverse related class
        className:
          type: string
          description: Name of the reverse related class
          nullable: true
        fraction:
          type: number
          description: >-
            Optional provision of a fraction of the total amount (e.g. volume or
            weight) that applies to the class relations of one relation type
          format: double
          nullable: true
        dictionaryUri:
          type: string
          description: >-
            The URI of the dictionary that contains the reverse related class.
            This URI can be used to retrieve the dictionary
          nullable: true
      additionalProperties: false
    ClassSearchResponseClassContract.v1:
      type: object
      properties:
        dictionaryUri:
          type: string
          description: Unique identification of the dictionary the class belongs to
          nullable: true
        dictionaryName:
          type: string
          description: Name of the dictionary the class belongs to
          nullable: true
        name:
          type: string
          description: Name of the class
          nullable: true
        referenceCode:
          type: string
          description: Code that can be used for dictionary specific purposes
          nullable: true
        uri:
          type: string
          description: Unique identification of the class
          nullable: true
        classType:
          type: string
          description: Type of the class
          nullable: true
        description:
          type: string
          nullable: true
        parentClassName:
          type: string
          nullable: true
        relatedIfcEntityNames:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    ClassSearchResponseContract.v1:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        offset:
          type: integer
          format: int32
        count:
          type: integer
          format: int32
        classes:
          type: array
          items:
            $ref: '#/components/schemas/ClassSearchResponseClassContract.v1'
          description: The list of Classes found
          nullable: true
      additionalProperties: false
    ClassSearchResultContract.v1:
      type: object
      properties:
        name:
          type: string
          description: Name of the Class
          nullable: true
        uri:
          type: string
          description: Unique identification of the Class
          nullable: true
        referenceCode:
          type: string
          description: Code that can be used for domain specific purposes
          nullable: true
        classType:
          type: string
          description: Type of the class
          nullable: true
        definition:
          type: string
          nullable: true
        synonyms:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    ClassificationContract.v4:
      required:
        - activationDateUtc
        - code
        - name
        - namespaceUri
        - status
        - versionDateUtc
      type: object
      properties:
        domainNamespaceUri:
          type: string
          description: Namespace URI of the domain
          nullable: true
        activationDateUtc:
          type: string
          description: Date of activation
          format: date-time
        code:
          minLength: 1
          type: string
          description: Code used originally by the domain
        creatorLanguageCode:
          type: string
          description: Language code of the creator
          nullable: true
        countriesOfUse:
          type: array
          items:
            type: string
          description: List of countries where used
          nullable: true
        countryOfOrigin:
          type: string
          description: Country of origin
          nullable: true
        deActivationDateUtc:
          type: string
          description: Date of deactivation
          format: date-time
          nullable: true
        definition:
          type: string
          description: Definition
          nullable: true
        deprecationExplanation:
          type: string
          description: Explanation of the deprecation
          nullable: true
        documentReference:
          type: string
          description: Reference to a(n official) document
          nullable: true
        name:
          minLength: 1
          type: string
          description: Name
        namespaceUri:
          minLength: 1
          type: string
          description: Unique identification
        replacedObjectCodes:
          type: array
          items:
            type: string
          description: List of codes of the replaced items
          nullable: true
        replacingObjectCodes:
          type: array
          items:
            type: string
          description: List of codes of the replacing items
          nullable: true
        revisionDateUtc:
          type: string
          description: Date of the revision
          format: date-time
          nullable: true
        revisionNumber:
          type: integer
          description: Revision number
          format: int32
          nullable: true
        status:
          minLength: 1
          type: string
          description: 'Status, can be: Preview, Active or Inactive'
        subdivisionsOfUse:
          type: array
          items:
            type: string
          description: List of subdivisions (e.g. states) where used
          nullable: true
        uid:
          type: string
          description: Alternative unique global identification
          nullable: true
        versionDateUtc:
          type: string
          description: Date of the version
          format: date-time
        versionNumber:
          type: integer
          description: Version number
          format: int32
          nullable: true
        visualRepresentationUri:
          type: string
          description: URI of a visual representation
          nullable: true
        classificationType:
          type: string
          description: Type of Classification
          nullable: true
        referenceCode:
          type: string
          description: Code that can be used for domain specific purposes
          nullable: true
        synonyms:
          type: array
          items:
            type: string
          description: List of synonyms for the classification
          nullable: true
        relatedIfcEntityNames:
          type: array
          items:
            type: string
          description: List of related IFC entity names (version independent)
          nullable: true
        parentClassificationReference:
          $ref: '#/components/schemas/ClassificationReferenceContract.v4'
        classificationProperties:
          type: array
          items:
            $ref: '#/components/schemas/ClassificationPropertyContract.v4'
          description: List of the properties of this classification
          nullable: true
        classificationRelations:
          type: array
          items:
            $ref: '#/components/schemas/ClassificationRelationContract.v4'
          description: >-
            List of relations to other classifications, can be reference to
            classifications of other domains
          nullable: true
        childClassificationReferences:
          type: array
          items:
            $ref: '#/components/schemas/ClassificationReferenceContract.v4'
          description: List of child classifications (only filled if requested)
          nullable: true
      additionalProperties: false
    ClassificationPropertyContract.v4:
      required:
        - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
          description: Name of the property
        namespaceUri:
          type: string
          nullable: true
        description:
          type: string
          description: "Plain language description of the property.\r\nIf at Property level no description has been given but a \"Definition\" is available, then \"Definition\" is returned as description"
          nullable: true
        dataType:
          type: string
          description: Format for expressing the value of the property
          nullable: true
        dimension:
          type: string
          description: "Dimension of the physical quantity in format \"L M T I Θ N J\", for example \"-2 1 0 0 0 0 0\".\r\nWith\r\n  L   Length\r\n  M   Mass\r\n  T   Time\r\n  I   Electric current\r\n  Θ   Thermodynamic Temperature\r\n  N   Amount of substance\r\n  J   Luminous intensity"
          nullable: true
        dimensionLength:
          type: integer
          description: The Length value of the dimension
          format: int32
          nullable: true
        dimensionMass:
          type: integer
          description: The Mass value of the dimension
          format: int32
          nullable: true
        dimensionTime:
          type: integer
          description: The Time value of the dimension
          format: int32
          nullable: true
        dimensionElectricCurrent:
          type: integer
          description: The Electric current value of the dimension
          format: int32
          nullable: true
        dimensionThermodynamicTemperature:
          type: integer
          description: The Thermodynamic temperature value of the dimension
          format: int32
          nullable: true
        dimensionAmountOfSubstance:
          type: integer
          description: The Amount of substance value of the dimension
          format: int32
          nullable: true
        dimensionLuminousIntensity:
          type: integer
          description: The Luminous intensity value of the dimension
          format: int32
          nullable: true
        dynamicParameterPropertyCodes:
          type: array
          items:
            type: string
          description: "List of codes of the properties which are parameters of the function for a dynamic property.\r\nOnly applicable for dynamic properties (IsDynamic)"
          nullable: true
        example:
          type: string
          description: Illustrate possible use or values of the Property
          nullable: true
        isDynamic:
          type: boolean
          description: >-
            True if the value of this property is dependent on other properties
            (as provided in DynamicParameterPropertyCodes)
          nullable: true
        isRequired:
          type: boolean
          description: Indicates if this property is required for the classification
          nullable: true
        isWritable:
          type: boolean
          description: Indicates if the value of the property can be changed by the user
          nullable: true
        maxExclusive:
          type: number
          description: "Maximum value of the property, exclusive\r\nThis value does not need to be the same as the MaxExclusive in the Property contract\r\nbecause this value can be overruled at Classification-Property level to define a more strict value."
          format: double
          nullable: true
        maxInclusive:
          type: number
          description: "Maximum value of the property, inclusive\r\nThis value does not need to be the same as the MaxInclusive in the Property contract\r\nbecause this value can be overruled at Classification-Property level to define a more strict value."
          format: double
          nullable: true
        minExclusive:
          type: number
          description: "Minimum value of the property, exclusive\r\nThis value does not need to be the same as the MinExclusive in the Property contract\r\nbecause this value can be overruled at Classification-Property level to define a more strict value."
          format: double
          nullable: true
        minInclusive:
          type: number
          description: "Minimum value of the property, inclusive\r\nThis value does not need to be the same as the MinInclusive in the Property contract\r\nbecause this value can be overruled at Classification-Property level to define a more strict value."
          format: double
          nullable: true
        pattern:
          type: string
          description: "An XML Schema Regular expression for the property value.\r\nSee for explanation: https://www.regular-expressions.info/xml.html.\r\nThis value does not need to be the same as the Pattern in the Property contract\r\nbecause this value can be overruled at Classification-Property level to define a more strict value."
          nullable: true
        physicalQuantity:
          type: string
          description: The quantity in plain text
          nullable: true
        allowedValues:
          type: array
          items:
            $ref: '#/components/schemas/ClassificationPropertyValueContract.v4'
          description: "List of allowed values\r\nThis list does not need to be the same as the list of AllowedValues in the Property contract\r\nbecause this list can be overruled at Classification-Property level to define a more strict list."
          nullable: true
        predefinedValue:
          type: string
          description: >-
            Predefined value: if the classification can have only one value for
            this property, this is it
          nullable: true
        propertyCode:
          type: string
          description: >-
            Code of the property, only applicable if property is of the same
            domain as the classification.
          nullable: true
        propertyDomainName:
          type: string
          description: Name of the Domain this property belongs to
          nullable: true
        propertyNamespaceUri:
          type: string
          description: Unique identification of the property
          nullable: true
        propertySet:
          type: string
          description: Name of the Property Set
          nullable: true
        propertyStatus:
          type: string
          description: 'Status of the property: Preview, Active or Inactive'
          nullable: true
        propertyValueKind:
          type: string
          description: >-
            Indicates kind of value: Single, Range (2 values expected), List
            (multiple values expected), Complex (use in combination with
            "ConnectedProperties"), ComplexList
          nullable: true
        symbol:
          type: string
          description: Symbol of the property
          nullable: true
        units:
          type: array
          items:
            type: string
          description: List of units to select from
          nullable: true
        qudtCodes:
          type: array
          items:
            type: string
          description: List of QUDT unit codes to select from
          nullable: true
      additionalProperties: false
    ClassificationPropertyValueContract.v4:
      required:
        - value
      type: object
      properties:
        namespaceUri:
          type: string
          description: Globally unique identification of the value (if present)
          nullable: true
        code:
          type: string
          description: Identification of the value
          nullable: true
        value:
          minLength: 1
          type: string
          description: Allowed value of the property
        description:
          type: string
          description: Description of the value
          nullable: true
        sortNumber:
          type: integer
          description: Sort number of value within the list of values for the Property
          format: int32
          nullable: true
      additionalProperties: false
    ClassificationReferenceContract.v4:
      required:
        - namespaceUri
      type: object
      properties:
        namespaceUri:
          minLength: 1
          type: string
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
      additionalProperties: false
    ClassificationRelationContract.v4:
      required:
        - relatedClassificationUri
        - relationType
      type: object
      properties:
        namespaceUri:
          type: string
          nullable: true
        relationType:
          minLength: 1
          type: string
          description: >-
            Can be one of: HasReference, IsEqualTo, IsSynonymOf, IsParentOf,
            IsChildOf, HasPart
        relatedClassificationUri:
          minLength: 1
          type: string
          description: Namespace URI of the related classification
        relatedClassificationName:
          type: string
          description: Name of the related classification
          nullable: true
        fraction:
          type: number
          description: >-
            Optional provision of a fraction of the total amount (e.g. volume or
            weight) that applies to the classification relations of one relation
            type
          format: double
          nullable: true
      additionalProperties: false
    CodeNameDto:
      type: object
      properties:
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    CountryContract.v1:
      type: object
      properties:
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    DictionaryClassesResponseContract.v1.Classes:
      required:
        - code
        - defaultLanguageCode
        - isLatestVersion
        - isPrivate
        - isVerified
        - name
        - organizationCodeOwner
        - organizationNameOwner
        - uri
        - version
      type: object
      properties:
        code:
          minLength: 1
          type: string
        uri:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        version:
          minLength: 1
          type: string
        organizationCodeOwner:
          minLength: 1
          type: string
        organizationNameOwner:
          minLength: 1
          type: string
        changeRequestEmail:
          type: string
          nullable: true
        defaultLanguageCode:
          minLength: 1
          type: string
          description: The default language for this domain
        isLatestVersion:
          type: boolean
        isVerified:
          type: boolean
        isPrivate:
          type: boolean
        license:
          type: string
          description: >-
            Name or short description of the license under which you can use
            this data
          nullable: true
        licenseUrl:
          type: string
          description: >-
            URL where you can find more details about the license or default
            link to info about licensing
          nullable: true
        qualityAssuranceProcedure:
          type: string
          description: >-
            Name or short description of the quality assurance procedure used
            while creating and maintaining the domain data
          nullable: true
        qualityAssuranceProcedureUrl:
          type: string
          description: >-
            URL where you can find more details about the quality assurance
            procedure
          nullable: true
        status:
          type: string
          description: >-
            For state indication, like "Preview", "Active", "InActive",
            "Released
          nullable: true
        moreInfoUrl:
          type: string
          description: Url to site with more info on domain
          nullable: true
        releaseDate:
          type: string
          description: Date of the release of this version
          format: date-time
          nullable: true
        lastUpdatedUtc:
          type: string
          description: Date and time the data of the domain has been last updated in bSDD
          format: date-time
        classes:
          type: array
          items:
            $ref: '#/components/schemas/ClassListItemContract.v1.Classes'
          nullable: true
        classesTotalCount:
          type: integer
          description: Total number of classes within the dictionary.
          format: int32
          nullable: true
        classesOffset:
          type: integer
          format: int32
          nullable: true
        classesCount:
          type: integer
          description: The returned number of classes.
          format: int32
          nullable: true
      additionalProperties: false
    DictionaryContract.v1:
      required:
        - code
        - defaultLanguageCode
        - isLatestVersion
        - isPrivate
        - isVerified
        - name
        - organizationCodeOwner
        - organizationNameOwner
        - uri
        - version
      type: object
      properties:
        code:
          minLength: 1
          type: string
        uri:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        version:
          minLength: 1
          type: string
        organizationCodeOwner:
          minLength: 1
          type: string
        organizationNameOwner:
          minLength: 1
          type: string
        changeRequestEmail:
          type: string
          nullable: true
        defaultLanguageCode:
          minLength: 1
          type: string
          description: The default language for this domain
        isLatestVersion:
          type: boolean
        isVerified:
          type: boolean
        isPrivate:
          type: boolean
        license:
          type: string
          description: >-
            Name or short description of the license under which you can use
            this data
          nullable: true
        licenseUrl:
          type: string
          description: >-
            URL where you can find more details about the license or default
            link to info about licensing
          nullable: true
        qualityAssuranceProcedure:
          type: string
          description: >-
            Name or short description of the quality assurance procedure used
            while creating and maintaining the domain data
          nullable: true
        qualityAssuranceProcedureUrl:
          type: string
          description: >-
            URL where you can find more details about the quality assurance
            procedure
          nullable: true
        status:
          type: string
          description: >-
            For state indication, like "Preview", "Active", "InActive",
            "Released
          nullable: true
        moreInfoUrl:
          type: string
          description: Url to site with more info on domain
          nullable: true
        releaseDate:
          type: string
          description: Date of the release of this version
          format: date-time
          nullable: true
        lastUpdatedUtc:
          type: string
          description: Date and time the data of the domain has been last updated in bSDD
          format: date-time
        availableLanguages:
          type: array
          items:
            $ref: '#/components/schemas/CodeNameDto'
          description: List of (partly) available languages for this dictionary
          nullable: true
      additionalProperties: false
    DictionaryPropertiesResponseContract.v1:
      required:
        - code
        - defaultLanguageCode
        - isLatestVersion
        - isPrivate
        - isVerified
        - name
        - organizationCodeOwner
        - organizationNameOwner
        - uri
        - version
      type: object
      properties:
        code:
          minLength: 1
          type: string
        uri:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        version:
          minLength: 1
          type: string
        organizationCodeOwner:
          minLength: 1
          type: string
        organizationNameOwner:
          minLength: 1
          type: string
        changeRequestEmail:
          type: string
          nullable: true
        defaultLanguageCode:
          minLength: 1
          type: string
          description: The default language for this domain
        isLatestVersion:
          type: boolean
        isVerified:
          type: boolean
        isPrivate:
          type: boolean
        license:
          type: string
          description: >-
            Name or short description of the license under which you can use
            this data
          nullable: true
        licenseUrl:
          type: string
          description: >-
            URL where you can find more details about the license or default
            link to info about licensing
          nullable: true
        qualityAssuranceProcedure:
          type: string
          description: >-
            Name or short description of the quality assurance procedure used
            while creating and maintaining the domain data
          nullable: true
        qualityAssuranceProcedureUrl:
          type: string
          description: >-
            URL where you can find more details about the quality assurance
            procedure
          nullable: true
        status:
          type: string
          description: >-
            For state indication, like "Preview", "Active", "InActive",
            "Released
          nullable: true
        moreInfoUrl:
          type: string
          description: Url to site with more info on domain
          nullable: true
        releaseDate:
          type: string
          description: Date of the release of this version
          format: date-time
          nullable: true
        lastUpdatedUtc:
          type: string
          description: Date and time the data of the domain has been last updated in bSDD
          format: date-time
        properties:
          type: array
          items:
            $ref: '#/components/schemas/PropertyListItemContract.v1'
          nullable: true
        propertiesTotalCount:
          type: integer
          description: Total number of properties within the dictionary.
          format: int32
        propertiesOffset:
          type: integer
          format: int32
        propertiesCount:
          type: integer
          description: The returned number of properties.
          format: int32
      additionalProperties: false
    DictionaryResponseContract.v1:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        offset:
          type: integer
          format: int32
        count:
          type: integer
          format: int32
        dictionaries:
          type: array
          items:
            $ref: '#/components/schemas/DictionaryContract.v1'
          nullable: true
      additionalProperties: false
    DictionarySearchResultContract.v1:
      type: object
      properties:
        name:
          type: string
          nullable: true
        uri:
          type: string
          nullable: true
        classes:
          type: array
          items:
            $ref: '#/components/schemas/ClassSearchResultContract.v1'
          nullable: true
      additionalProperties: false
    HierarchyItemContract.v1:
      required:
        - code
        - level
        - name
        - uri
      type: object
      properties:
        level:
          type: integer
          format: int32
        name:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
        uri:
          minLength: 1
          type: string
      additionalProperties: false
    InternalExternalOption.v1:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    LanguageContract.v1:
      required:
        - isoCode
        - name
      type: object
      properties:
        isoCode:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
      additionalProperties: false
    PopularDictionariesResponseContract.v1:
      type: object
      properties:
        popularDictionaries:
          type: array
          items:
            $ref: '#/components/schemas/PopularDictionaryContract.v1'
          nullable: true
      additionalProperties: false
    PopularDictionaryContract.v1:
      required:
        - name
        - organizationName
        - uri
      type: object
      properties:
        uri:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        organizationName:
          minLength: 1
          type: string
      additionalProperties: false
    PrivateDictionaryAccessContract.v1:
      type: object
      properties:
        emailAddressOrDomain:
          type: string
          nullable: true
      additionalProperties: false
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: {}
    PropertyClassContract.v4:
      required:
        - name
      type: object
      properties:
        uri:
          type: string
          description: Globally unique identification of the class
          nullable: true
        code:
          type: string
          description: Code of the class
          nullable: true
        name:
          minLength: 1
          type: string
          description: Name of the class
        definition:
          type: string
          description: Definition of the class
          nullable: true
        description:
          type: string
          description: Description of the class
          nullable: true
        propertySet:
          type: string
          nullable: true
      additionalProperties: false
    PropertyClassItemContract.v1:
      required:
        - name
        - propertySet
        - uri
      type: object
      properties:
        name:
          minLength: 1
          type: string
          description: Name of the class
        uri:
          minLength: 1
          type: string
          description: Uri of the class
        description:
          type: string
          description: Description of the class
          nullable: true
        dictionaryUri:
          type: string
          description: Uri of the dictionary where the class is defined
          nullable: true
        propertySet:
          minLength: 1
          type: string
          description: The Pset the property belongs to within the class
      additionalProperties: false
    PropertyClassesContract.v1:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        offset:
          type: integer
          format: int32
        count:
          type: integer
          format: int32
        propertyUri:
          type: string
          description: Uri of the property
          nullable: true
        propertyClasses:
          type: array
          items:
            $ref: '#/components/schemas/PropertyClassItemContract.v1'
          description: List of classes having this property
          nullable: true
      additionalProperties: false
    PropertyContract.v4:
      required:
        - activationDateUtc
        - code
        - name
        - status
        - uri
        - versionDateUtc
      type: object
      properties:
        dictionaryUri:
          type: string
          description: URI of the dictionary
          nullable: true
        activationDateUtc:
          type: string
          description: Date of activation
          format: date-time
        code:
          minLength: 1
          type: string
          description: Code used originally by the dictionary
        creatorLanguageCode:
          type: string
          description: Language code of the creator
          nullable: true
        countriesOfUse:
          type: array
          items:
            type: string
          description: List of countries where used
          nullable: true
        countryOfOrigin:
          type: string
          description: Country of origin
          nullable: true
        deActivationDateUtc:
          type: string
          description: Date of deactivation
          format: date-time
          nullable: true
        definition:
          type: string
          description: Formal definition
          nullable: true
        deprecationExplanation:
          type: string
          description: Explanation of the deprecation
          nullable: true
        description:
          type: string
          description: Description
          nullable: true
        documentReference:
          type: string
          description: Reference to a(n official) document
          nullable: true
        name:
          minLength: 1
          type: string
          description: Name
        uri:
          minLength: 1
          type: string
          description: Unique identification
        replacedObjectCodes:
          type: array
          items:
            type: string
          description: List of codes of the replaced items
          nullable: true
        replacingObjectCodes:
          type: array
          items:
            type: string
          description: List of codes of the replacing items
          nullable: true
        revisionDateUtc:
          type: string
          description: Date of the revision
          format: date-time
          nullable: true
        revisionNumber:
          type: integer
          description: Revision number
          format: int32
          nullable: true
        status:
          minLength: 1
          type: string
          description: 'Status, can be: Preview, Active or Inactive'
        subdivisionsOfUse:
          type: array
          items:
            type: string
          description: List of subdivisions (e.g. states) where used
          nullable: true
        uid:
          type: string
          description: Alternative unique global identification
          nullable: true
        versionDateUtc:
          type: string
          description: Date of the version
          format: date-time
        versionNumber:
          type: integer
          description: Version number
          format: int32
          nullable: true
        visualRepresentationUri:
          type: string
          description: URI of a visual representation
          nullable: true
        connectedPropertyCodes:
          type: array
          items:
            type: string
          description: List of connected property codes
          nullable: true
        dataType:
          type: string
          description: >-
            Format for expressing the value of the property: Boolean, Character,
            Date, Enumeration, Integer, Real, String, Time
          nullable: true
        dimension:
          type: string
          description: "Dimension of the physical quantity in format \"L M T I Θ N J\", for example \"-2 1 0 0 0 0 0\".\r\nWith\r\n  L   Length\r\n  M   Mass\r\n  T   Time\r\n  I   Electric current\r\n  Θ   Thermodynamic Temperature\r\n  N   Amount of substance\r\n  J   Luminous intensity"
          nullable: true
        dimensionLength:
          type: integer
          description: The Length value of the dimension
          format: int32
          nullable: true
        dimensionMass:
          type: integer
          description: The Mass value of the dimension
          format: int32
          nullable: true
        dimensionTime:
          type: integer
          description: The Time value of the dimension
          format: int32
          nullable: true
        dimensionElectricCurrent:
          type: integer
          description: The Electric current value of the dimension
          format: int32
          nullable: true
        dimensionThermodynamicTemperature:
          type: integer
          description: The Thermodynamic temperature value of the dimension
          format: int32
          nullable: true
        dimensionAmountOfSubstance:
          type: integer
          description: The Amount of substance value of the dimension
          format: int32
          nullable: true
        dimensionLuminousIntensity:
          type: integer
          description: The Luminous intensity value of the dimension
          format: int32
          nullable: true
        dynamicParameterPropertyCodes:
          type: array
          items:
            type: string
          description: "List of codes of the properties which are parameters of the function for a dynamic property.\r\nOnly applicable for dynamic properties (IsDynamic)"
          nullable: true
        example:
          type: string
          description: Illustrate possible use or values of the Property
          nullable: true
        isDynamic:
          type: boolean
          description: >-
            True if the value of this property is dependent on other properties
            (as provided in DynamicParameterPropertyCodes)
          nullable: true
        maxExclusive:
          type: number
          description: Maximum value of the property, exclusive
          format: double
          nullable: true
        maxInclusive:
          type: number
          description: Maximum value of the property, inclusive
          format: double
          nullable: true
        methodOfMeasurement:
          type: string
          description: Description of the method of measurement
          nullable: true
        minExclusive:
          type: number
          description: Minimum value of the property, exclusive
          format: double
          nullable: true
        minInclusive:
          type: number
          description: Minimum value of the property, inclusive
          format: double
          nullable: true
        pattern:
          type: string
          description: "An XML Schema Regular expression for the property value.\r\nSee for explanation: https://www.regular-expressions.info/xml.html."
          nullable: true
        physicalQuantity:
          type: string
          description: The quantity in plain text
          nullable: true
        allowedValues:
          type: array
          items:
            $ref: '#/components/schemas/PropertyValueContract.v4'
          description: List of allowed values
          nullable: true
        propertyValueKind:
          type: string
          description: >-
            Indicates kind of value: Single, Range (2 values expected), List
            (multiple values expected), Complex (use in combination with
            "ConnectedProperties"), ComplexList
          nullable: true
        propertyRelations:
          type: array
          items:
            $ref: '#/components/schemas/PropertyRelationContract.v4'
          description: List of relations with other properties
          nullable: true
        textFormat:
          type: string
          description: The text type, e.g. UTF-8
          nullable: true
        units:
          type: array
          items:
            type: string
          description: Multiple references to Unit
          nullable: true
        qudtCodes:
          type: array
          items:
            type: string
          description: List of QUDT unit codes (if QUDT code available)
          nullable: true
        propertyClasses:
          type: array
          items:
            $ref: '#/components/schemas/PropertyClassContract.v4'
          description: >-
            List of the classes this property is used in (only classes of same
            dictionary as the property are listed)
          nullable: true
      additionalProperties: false
    PropertyContract.v5:
      required:
        - activationDateUtc
        - code
        - name
        - status
        - uri
        - versionDateUtc
      type: object
      properties:
        dictionaryUri:
          type: string
          description: URI of the dictionary
          nullable: true
        activationDateUtc:
          type: string
          description: Date of activation
          format: date-time
        code:
          minLength: 1
          type: string
          description: Code used originally by the dictionary
        creatorLanguageCode:
          type: string
          description: Language code of the creator
          nullable: true
        countriesOfUse:
          type: array
          items:
            type: string
          description: List of countries where used
          nullable: true
        countryOfOrigin:
          type: string
          description: Country of origin
          nullable: true
        deActivationDateUtc:
          type: string
          description: Date of deactivation
          format: date-time
          nullable: true
        definition:
          type: string
          description: Formal definition
          nullable: true
        deprecationExplanation:
          type: string
          description: Explanation of the deprecation
          nullable: true
        description:
          type: string
          description: Description
          nullable: true
        documentReference:
          type: string
          description: Reference to a(n official) document
          nullable: true
        name:
          minLength: 1
          type: string
          description: Name
        uri:
          minLength: 1
          type: string
          description: Unique identification
        replacedObjectCodes:
          type: array
          items:
            type: string
          description: List of codes of the replaced items
          nullable: true
        replacingObjectCodes:
          type: array
          items:
            type: string
          description: List of codes of the replacing items
          nullable: true
        revisionDateUtc:
          type: string
          description: Date of the revision
          format: date-time
          nullable: true
        revisionNumber:
          type: integer
          description: Revision number
          format: int32
          nullable: true
        status:
          minLength: 1
          type: string
          description: 'Status, can be: Preview, Active or Inactive'
        subdivisionsOfUse:
          type: array
          items:
            type: string
          description: List of subdivisions (e.g. states) where used
          nullable: true
        uid:
          type: string
          description: Alternative unique global identification
          nullable: true
        versionDateUtc:
          type: string
          description: Date of the version
          format: date-time
        versionNumber:
          type: integer
          description: Version number
          format: int32
          nullable: true
        visualRepresentationUri:
          type: string
          description: URI of a visual representation
          nullable: true
        connectedPropertyCodes:
          type: array
          items:
            type: string
          description: List of connected property codes
          nullable: true
        dataType:
          type: string
          description: >-
            Format for expressing the value of the property: Boolean, Character,
            Date, Enumeration, Integer, Real, String, Time
          nullable: true
        dimension:
          type: string
          description: "Dimension of the physical quantity in format \"L M T I Θ N J\", for example \"-2 1 0 0 0 0 0\".\r\nWith\r\n  L   Length\r\n  M   Mass\r\n  T   Time\r\n  I   Electric current\r\n  Θ   Thermodynamic Temperature\r\n  N   Amount of substance\r\n  J   Luminous intensity"
          nullable: true
        dimensionLength:
          type: integer
          description: The Length value of the dimension
          format: int32
          nullable: true
        dimensionMass:
          type: integer
          description: The Mass value of the dimension
          format: int32
          nullable: true
        dimensionTime:
          type: integer
          description: The Time value of the dimension
          format: int32
          nullable: true
        dimensionElectricCurrent:
          type: integer
          description: The Electric current value of the dimension
          format: int32
          nullable: true
        dimensionThermodynamicTemperature:
          type: integer
          description: The Thermodynamic temperature value of the dimension
          format: int32
          nullable: true
        dimensionAmountOfSubstance:
          type: integer
          description: The Amount of substance value of the dimension
          format: int32
          nullable: true
        dimensionLuminousIntensity:
          type: integer
          description: The Luminous intensity value of the dimension
          format: int32
          nullable: true
        dynamicParameterPropertyCodes:
          type: array
          items:
            type: string
          description: "List of codes of the properties which are parameters of the function for a dynamic property.\r\nOnly applicable for dynamic properties (IsDynamic)"
          nullable: true
        example:
          type: string
          description: Illustrate possible use or values of the Property
          nullable: true
        isDynamic:
          type: boolean
          description: >-
            True if the value of this property is dependent on other properties
            (as provided in DynamicParameterPropertyCodes)
          nullable: true
        maxExclusive:
          type: number
          description: Maximum value of the property, exclusive
          format: double
          nullable: true
        maxInclusive:
          type: number
          description: Maximum value of the property, inclusive
          format: double
          nullable: true
        methodOfMeasurement:
          type: string
          description: Description of the method of measurement
          nullable: true
        minExclusive:
          type: number
          description: Minimum value of the property, exclusive
          format: double
          nullable: true
        minInclusive:
          type: number
          description: Minimum value of the property, inclusive
          format: double
          nullable: true
        pattern:
          type: string
          description: "An XML Schema Regular expression for the property value.\r\nSee for explanation: https://www.regular-expressions.info/xml.html."
          nullable: true
        physicalQuantity:
          type: string
          description: The quantity in plain text
          nullable: true
        allowedValues:
          type: array
          items:
            $ref: '#/components/schemas/PropertyValueContract.v5'
          description: List of allowed values
          nullable: true
        propertyValueKind:
          type: string
          description: >-
            Indicates kind of value: Single, Range (2 values expected), List
            (multiple values expected), Complex (use in combination with
            "ConnectedProperties"), ComplexList
          nullable: true
        propertyRelations:
          type: array
          items:
            $ref: '#/components/schemas/PropertyRelationContract.v5'
          description: List of relations with other properties
          nullable: true
        textFormat:
          type: string
          description: The text type, e.g. UTF-8
          nullable: true
        units:
          type: array
          items:
            type: string
          description: Multiple references to Unit
          nullable: true
        qudtCodes:
          type: array
          items:
            type: string
          description: List of QUDT unit codes (if QUDT code available)
          nullable: true
      additionalProperties: false
    PropertyListItemContract.v1:
      type: object
      properties:
        uri:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        descriptionPart:
          type: string
          description: Description of the class, max 101 characters long
          nullable: true
      additionalProperties: false
    PropertyRelationContract.v4:
      type: object
      properties:
        uri:
          type: string
          description: Globally unique identification of the relation
          nullable: true
        relationType:
          type: string
          description: 'The relation with the other property: e.g. HasReference, IsEqualTo'
          nullable: true
        relatedPropertyUri:
          type: string
          description: Namespace URI of the related property
          nullable: true
        relatedPropertyName:
          type: string
          description: Name of the related property
          nullable: true
      additionalProperties: false
    PropertyRelationContract.v5:
      type: object
      properties:
        uri:
          type: string
          description: Globally unique identification of the relation
          nullable: true
        relationType:
          type: string
          description: 'The relation with the other property: e.g. HasReference, IsEqualTo'
          nullable: true
        relatedPropertyUri:
          type: string
          description: Namespace URI of the related property
          nullable: true
        relatedPropertyName:
          type: string
          description: Name of the related property
          nullable: true
      additionalProperties: false
    PropertyRelationItemContract.v1:
      required:
        - propertyUri
        - relationType
      type: object
      properties:
        relationType:
          minLength: 1
          type: string
          description: 'Can be one of: HasReference, IsEqualTo, IsSimilarTo, IsParentOf'
        propertyUri:
          minLength: 1
          type: string
          description: URI of the related property
        propertyName:
          type: string
          description: Name of the related property
          nullable: true
        dictionaryUri:
          type: string
          description: >-
            The URI of the dictionary that contains the related property. This
            URI can be used to retrieve the dictionary
          nullable: true
      additionalProperties: false
    PropertyRelationsContract.v1:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        offset:
          type: integer
          format: int32
        count:
          type: integer
          format: int32
        propertyUri:
          type: string
          description: Uri of the property
          nullable: true
        areReversedRelations:
          type: boolean
        propertyRelations:
          type: array
          items:
            $ref: '#/components/schemas/PropertyRelationItemContract.v1'
          description: List of the relations of this property
          nullable: true
      additionalProperties: false
    PropertyValueContract.v4:
      required:
        - value
      type: object
      properties:
        uri:
          type: string
          description: Globally unique identification of the value
          nullable: true
        code:
          type: string
          description: Identification of the value (unique within the property)
          nullable: true
        value:
          minLength: 1
          type: string
          description: Allowed value of the property
        description:
          type: string
          description: Description of the value
          nullable: true
        sortNumber:
          type: integer
          description: >-
            (Optional) Sort number of value within the list of values for the
            Property
          format: int32
          nullable: true
      additionalProperties: false
    PropertyValueContract.v5:
      required:
        - value
      type: object
      properties:
        uri:
          type: string
          description: Globally unique identification of the value
          nullable: true
        code:
          type: string
          description: Identification of the value (unique within the property)
          nullable: true
        value:
          minLength: 1
          type: string
          description: Allowed value of the property
        description:
          type: string
          description: Description of the value
          nullable: true
        sortNumber:
          type: integer
          description: >-
            (Optional) Sort number of value within the list of values for the
            Property
          format: int32
          nullable: true
      additionalProperties: false
    ReferenceDocumentContract.v1:
      type: object
      properties:
        title:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        date:
          type: string
          format: date-time
      additionalProperties: false
    SearchInDictionaryResponseContract.v1:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        offset:
          type: integer
          format: int32
        count:
          type: integer
          format: int32
        dictionary:
          $ref: '#/components/schemas/DictionarySearchResultContract.v1'
      additionalProperties: false
    TextSearchResponseClassContract.v1:
      type: object
      properties:
        dictionaryUri:
          type: string
          description: Unique identification of the dictionary the class belongs to
          nullable: true
        dictionaryName:
          type: string
          description: Name of the dictionary the class belongs to
          nullable: true
        name:
          type: string
          nullable: true
        referenceCode:
          type: string
          description: Code that can be used for dictionary specific purposes
          nullable: true
        uri:
          type: string
          description: Unique identification of the class
          nullable: true
        classType:
          type: string
          description: Type of the class
          nullable: true
        description:
          type: string
          nullable: true
        parentClassName:
          type: string
          nullable: true
        relatedIfcEntityNames:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    TextSearchResponseClassContract.v2:
      type: object
      properties:
        dictionaryUri:
          type: string
          description: Unique identification of the dictionary the class belongs to
          nullable: true
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        referenceCode:
          type: string
          description: Code that can be used for dictionary specific purposes
          nullable: true
        uri:
          type: string
          description: Unique identification of the class
          nullable: true
        classType:
          type: string
          description: Type of the class
          nullable: true
        description:
          type: string
          nullable: true
        parentClassName:
          type: string
          nullable: true
        relatedIfcEntityNames:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    TextSearchResponseContract.v1:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        offset:
          type: integer
          format: int32
        count:
          type: integer
          format: int32
        classes:
          type: array
          items:
            $ref: '#/components/schemas/TextSearchResponseClassContract.v1'
          description: The list of Classes found
          nullable: true
        dictionaries:
          type: array
          items:
            $ref: '#/components/schemas/TextSearchResponseDictionaryContract.v1'
          description: The list of Dictionaries with found results
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/TextSearchResponsePropertyContract.v1'
          description: List of Properties found
          nullable: true
      additionalProperties: false
    TextSearchResponseContract.v2:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        offset:
          type: integer
          format: int32
        count:
          type: integer
          format: int32
        classes:
          type: array
          items:
            $ref: '#/components/schemas/TextSearchResponseClassContract.v2'
          description: The list of Classes found
          nullable: true
        dictionaries:
          type: array
          items:
            $ref: '#/components/schemas/TextSearchResponseDictionaryContract.v2'
          description: The list of Dictionaries with found results
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/TextSearchResponsePropertyContract.v2'
          description: List of Properties found
          nullable: true
      additionalProperties: false
    TextSearchResponseDictionaryContract.v1:
      type: object
      properties:
        uri:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    TextSearchResponseDictionaryContract.v2:
      required:
        - code
        - isLatestVersion
        - isVerified
        - languages
        - name
        - organizationName
        - status
        - uri
        - version
      type: object
      properties:
        uri:
          minLength: 1
          type: string
        organizationName:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        version:
          minLength: 1
          type: string
        status:
          minLength: 1
          type: string
        languages:
          type: array
          items:
            $ref: '#/components/schemas/LanguageContract.v1'
        isLatestVersion:
          type: boolean
        isVerified:
          type: boolean
      additionalProperties: false
    TextSearchResponsePropertyContract.v1:
      type: object
      properties:
        dictionaryUri:
          type: string
          nullable: true
        dictionaryName:
          type: string
          nullable: true
        uri:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
    TextSearchResponsePropertyContract.v2:
      type: object
      properties:
        dictionaryUri:
          type: string
          nullable: true
        uri:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
    UnitContract.v1:
      type: object
      properties:
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        symbol:
          type: string
          nullable: true
        qudtUri:
          type: string
          nullable: true
      additionalProperties: false
    UploadImportFileResult.v1:
      type: object
      properties:
        isOk:
          type: boolean
          description: "Indicates if the file will be imported.\r\nWarnings are allowed, import will continue but may lead to undesired values in the database."
        errors:
          type: array
          items:
            $ref: '#/components/schemas/UploadImportFileResultItem.v1'
          description: "The list of errors found.\r\nIt may happen that if you fix one error new errors will be discovered."
          nullable: true
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/UploadImportFileResultItem.v1'
          description: "List of warnings.\r\nIt is best to have no warnings at all to avoid inconsistent or incorrect values in the database"
          nullable: true
        informationalMessages:
          type: array
          items:
            $ref: '#/components/schemas/UploadImportFileResultItem.v1'
          description: Informational messages
          nullable: true
      additionalProperties: false
    UploadImportFileResult.v2:
      type: object
      properties:
        isValidatedAsync:
          type: boolean
          description: "Indicates if the file will be validated in the background.\r\nLarge files (>= 15 MB) will be validated in the background. You receive the results by e-mail."
        isOk:
          type: boolean
          description: "Indicates if the file will be imported.\r\nWarnings are allowed, import will continue but may lead to undesired values in the database.\r\nOnly applicable for small files (smaller than 15 MB)."
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/UploadImportFileResultItem.v2'
          description: "The list of errors found.\r\nIt may happen that if you fix one error new errors will be discovered."
          nullable: true
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/UploadImportFileResultItem.v2'
          description: "List of warnings.\r\nIt is best to have no warnings at all to avoid inconsistent or incorrect values in the database"
          nullable: true
        informationalMessages:
          type: array
          items:
            $ref: '#/components/schemas/UploadImportFileResultItem.v2'
          description: Informational messages
          nullable: true
      additionalProperties: false
    UploadImportFileResultItem.v1:
      type: object
      properties:
        attribute:
          type: string
          description: The attribute the message applies to
          nullable: true
        message:
          type: string
          description: The message
          nullable: true
      additionalProperties: false
    UploadImportFileResultItem.v2:
      type: object
      properties:
        attribute:
          type: string
          description: The attribute the message applies to
          nullable: true
        message:
          type: string
          description: The message
          nullable: true
      additionalProperties: false
    UriRedirectionContract.v1:
      type: object
      properties:
        organizationCodeSource:
          type: string
          nullable: true
        dictionaryCodeSource:
          type: string
          nullable: true
        organizationCodeDestination:
          type: string
          nullable: true
        dictionaryCodeDestination:
          type: string
          nullable: true
      additionalProperties: false
    UriRedirectionsContract.v1:
      type: object
      properties:
        uriRedirections:
          type: array
          items:
            $ref: '#/components/schemas/UriRedirectionContract.v1'
          description: >-
            List of obsolete organization/dictionary codes which are mapped to
            new ones
          nullable: true
      additionalProperties: false
  securitySchemes:
    aad-jwt:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: >-
            https://authentication.buildingsmart.org/buildingsmartservices.onmicrosoft.com/b2c_1a_signupsignin_c/oauth2/v2.0/authorize
          scopes:
            https://buildingSMARTservices.onmicrosoft.com/bsddapi/read: ''
